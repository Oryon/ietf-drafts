<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc autobreaks="yes"?>
<?rfc compact="yes"?>
<?rfc strict='yes'?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<rfc category="info" docName="draft-bruneau-intarea-provisioning-domains-01"
     ipr="trust200902">
  <front>
    <title abbrev="Provisioning Domains">Discovering Provisioning Domain Names
    and Data</title>

    <author fullname="Basile Bruneau" initials="B" surname="Bruneau">
      <organization>&Eacute;cole Polytechnique</organization>

      <address>
        <postal>
          <street/>

          <city>Vannes</city>

          <code>56000</code>

          <country>France</country>
        </postal>

        <email>basile.bruneau@polytechnique.edu</email>
      </address>
    </author>

    <author fullname="Pierre Pfister" initials="P" surname="Pfister">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>11 Rue Camille Desmoulins</street>

          <city>Issy-les-Moulineaux</city>

          <code>92130</code>

          <country>France</country>
        </postal>

        <email>ppfister@cisco.com</email>
      </address>
    </author>

    <author fullname="David Schinazi" initials="D" surname="Schinazi">
      <organization>Apple</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <facsimile/>

        <email>dschinazi@apple.com</email>

        <uri/>
      </address>
    </author>

    <author fullname="Tommy Pauly" initials="T" surname="Pauly">
      <organization>Apple</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <facsimile/>

        <email>tpauly@apple.com</email>

        <uri/>
      </address>
    </author>

    <author fullname="Eric Vyncke" initials="E" surname="Vyncke">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>De Kleetlaan, 6</street>

          <city>Diegem</city>

          <code>1831</code>

          <country>Belgium</country>
        </postal>

        <email>evyncke@cisco.com</email>
      </address>
    </author>

    <date day="30" month="June" year="2017"/>

    <area>Internet</area>

    <workgroup>intarea</workgroup>

    <keyword>PVD</keyword>

    <keyword>provisioning domain</keyword>

    <keyword>host configuration</keyword>

    <keyword>HTTP</keyword>

    <abstract>
      <t>An increasing number of hosts and networks are connected to the
      Internet through multiple interfaces, some of which may provide multiple
      ways to access the internet by the mean of multiple IPv6 prefix
      configurations.</t>

      <t>This document describes a way for hosts to retrieve additional
      information about their network access characteristics. The set of
      configuration items required to access the Internet is called a
      Provisioning Domain (PvD) and is identified by a Fully Qualified Domain
      Name (FQDN). This identifier, retrieved using a new Router Advertisement
      (RA) option, is associated with the set of information included within
      the RA and may later be used to retrieve additional information
      associated to the PvD by the mean of an HTTP request.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>It has become very common in modern networks that hosts have Internet
      or more specific network access through different networking interfaces,
      tunnels, or next-hop routers. The concept of Provisioning Domain (PvD)
      was defined in <xref target="RFC7556"/> as a set of network
      configuration information which can be used by hosts in order to access
      the network.</t>

      <t>In this document, PvDs are identified by Fully Qualified Domain Names
      called PvD IDs, which are included in Router Advertisements <xref
      target="RFC4861"/> as a new option and are used to identify
      correlated sets of network configuration data.</t>

      <t>Devices connected to the Internet through multiple interfaces would
      typically be provisioned with one PvD per interface, but it is worth
      noting that multiple PvDs with different PvD IDs could be provisioned on
      any host interface, as well as noting that the same PvD ID could be used
      on different interfaces in order to inform the host that both PvDs, on
      different interfaces, ultimately provide identical services.</t>

      <t>This document also introduces a way for hosts to retrieve additional
      information related to a specific PvD by the mean of an HTTP-over-TLS
      query using an URI derived from the PvD ID. The retrieved JSON object
      contains additional network information that would typically be
      considered unfit, or too large, to be directly included in the Router
      Advertisements. This information can be used by the networking stack,
      the applications, or even be partially displayed to the users (e.g., by
      displaying a localized network service name).</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in <xref
      target="RFC2119"/>.</t>

      <t>In addition, this document uses the following terminology: <list
          style="hanging">
          <t hangText="PvD: ">A Provisioning Domain, a set of network
          configuration information; for more information, see <xref
          target="RFC7556"/>.</t>

          <t hangText="PvD ID: ">A Fully Qualified Domain Name (FQDN) used to
          identify a PvD.</t>

          <t hangText="Explicit PvD: ">A PvD uniquely identified with a PvD
          ID.</t>

          <t hangText="Implicit PvD: ">A PvD associated with a set of
          configuration information that, in the absence of a PvD ID, is
          associated with the advertising router.</t>
        </list></t>
    </section>

    <section anchor="ra"
             title="Provisioning Domain Identification using Router Advertisements">
      <t>Each provisioning domain is identified by a PvD ID. The PvD ID is a
      Fully Qualified Domain Name (FQDN) which MUST belong to the network
      operator in order to avoid ambiguity. The same PvD ID MAY be used in
      several access networks if the set of configuration information is
      identical (e.g. in all home networks subscribed to the same
      service).</t>

      <section title="PvD ID Option for Router Advertisements">
        <t>This document introduces a new Router Advertisement (RA) option
        called the PvD ID Router Advertisement Option, used to convey the FQDN
        identifying a given PvD.</t>

        <figure title="PvD ID Router Advertisements Option format">
          <preamble/>

          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |    Length     |  Seq  |H|L|     Reserved      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            Lifetime                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          PvD ID FQDN                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            ]]></artwork>

          <postamble/>
        </figure>

        <t><list style="hanging">
            <t hangText="Type        : ">(8 bits) To be defined by IANA.</t>

            <t hangText="Length      : ">(8 bits) The length of the option
            (including the Type and Length fields) in units of 8 octets.</t>

            <t hangText="Seq         : ">(4 bits) Sequence number for the PvD
            Additional Information, as described in <xref target="data"/>.</t>

            <t hangText="H-flag      : ">(1 bit) Whether some PvD Additional
            Information is made available through HTTP over TLS, as described
            in <xref target="data"/>.</t>

            <t hangText="L-flag      : ">(1 bit) Whether the router is also
            providing IPv4 access using DHCPv4 (see <xref
            target="dhcpv4"/>).</t>

            <t hangText="Reserved    : ">(10 bits) Reserved for later use. It
            MUST be set to zero by the sender and ignored by the receiver.</t>

            <t hangText="Lifetime    : ">(32 bits) The length of time in
            seconds (relative to the time the packet is sent) that the PvD ID
            option is valid. A value of all one bits (0xffffffff) represents
            infinity.</t>

            <t hangText="PvD ID FQDN : ">The FQDN used as PvD ID in DNS binary
            format <xref target="RFC1035"/>, padded until the next 8 octets
            boundary. All the bytes after the first empty DNS label MUST be
            set to zero by the sender and MUST be ignored by the receiver. The
            DNS name compression technique described in <xref
            target="RFC1035"/> MUST NOT be used.</t>
          </list></t>

        <t>Routers MUST NOT include more than one PvD ID Router Advertisement
        Option in each RA. In case multiple PvD ID options are found in a
        given RA, hosts MUST ignore all but the first PvD ID option.</t>

        <t>Note: The existence and/or size of the sequence number
        is subject to discussion. The validity of a PvD Additional Information
        object is included in the object itself, but this only allows for
        'pull based' updates, whereas the RA options usually provide 'push
        based' updates.</t>

        <t>Note: including the lifetime option is congruent
        with the lifetime option of the other RA option. On the other hand, do
        we need it ?</t>
      </section>

      <section title="Router Behavior">
        <t>A router MAY insert at most one PvD ID Option in its RAs. The
        included PvD ID is associated with all the other options included in
        the same RA (e.g., Prefix Information <xref target="RFC4861"/>,
        Recursive DNS Server <xref target="RFC6106"/>, Routing Information
        <xref target="RFC4191"/>, Captive Portal <xref target="RFC7710"/>
        options).</t>

        <t>In order to provide multiple independent PvDs, a router MUST send
        multiple RAs using different source link-local addresses (LLA) (as
        proposed in <xref
        target="I-D.bowbakova-rtgwg-enterprise-pa-multihoming"/>), each of
        which MAY include a PvD ID option. In such cases, routers MAY
        originate the different RAs using the same datalink layer address.</t>

        <t>If the router is actually a VRRP instance <xref target="RFC5798"/>,
        then the procedure is identical except that the virtual datalink layer
        address is used as well as virtual IPv6 addresses.</t>
      </section>

      <section anchor="host" title="Host Behavior">
        <t>RAs are used to configure IPv6 hosts. When a host receives a RA
        message including a PvD ID Option with a non-zero lifetime, it MUST
        associate all the configuration options included in the RA (e.g.,
        Prefix Information <xref target="RFC4861"/>, Recursive DNS Server
        <xref target="RFC6106"/>, Routing Information <xref
        target="RFC4191"/>, Captive Portal <xref target="RFC7710"/> options)
        with the PvD ID).</t>

        <t>If the received RA does not include a PvD ID Option, or whenever
        the included PvD ID Option has a lifetime set to zero, the host MUST
        associate the options included in the RA with an implicit PvD. This
        implicit PvD is identified by the link-local address of the router
        sending the RA and the interface on which the RA was received.</t>

        <t>This document does not update the way Router Advertisement options
        are processed. But in addition to the option processing defined in
        other documents, hosts implementing this specification MUST associate
        each created or updated object (e.g. address, default route, more
        specific route, DNS server list) with the PvD associated with the
        received RA as well as the interface and link-local address of the
        router which last updated the object.</t>

        <t>Each configuration object has a PvD validity timer set to the PvD
        ID option lifetime whenever an RA that updates the object is received.
        If the received RA does not include a PvD ID option, or whenever the
        PvD ID option lifetime is zero, the associated objects are immediately
        associated with an implicit PvD, as mentioned in the previous
        paragraph. Similarly, whenever an object's PvD timer reaches zero, the
        object is immediately associated with an implicit PvD identified by
        the link-local address and interface of the router which last updated
        the object.</t>

        <t>While resolving names, executing the default address selection
        algorithm <xref target="RFC6724"/> or executing the default router
        selection algorithm (<xref target="RFC2461"/>, <xref
        target="RFC4191"/> and <xref target="RFC8028"/>), hosts MAY consider
        only the configuration associated with an arbitrary set of PvDs.</t>

        <!--  When doing so,
 hosts MUST also ensure that the set of used PvD remains the same on a
 per-connection basis. !!! NOT SUPER CLEAR-->

        <t>For example, a host MAY associate a given process with a specific
        PvD, or a specific set of PvDs, while associating another process with
        another PvD. A PvD-aware application might also be able to select, on
        a per-connection basis, which PvDs should be used for a given
        connection. And particularly constrained devices such as small battery
        operated devices (e.g. IoT), or devices with limited CPU or memory
        resources may purposefully use a single PvD while ignoring some
        received RAs containing different PvD IDs.</t>

        <t>The way an application expresses its desire to use a given PvD, or
        a set of PvDs, or the way this selection is enforced, is out of the
        scope of this document. Useful insights about these considerations can
        be found in <xref target="I-D.kline-mif-mpvd-api-reqs"/>.</t>

        <section title="DHCPv6 configuration association">
          <t>When a host retrieves configuration information from DHCPv6, the
          configured elements MUST be associated with the explicit or implicit
          PvD of the RA received on the same interface with the O-flag set <xref target="RFC4861"/>.
          If multiple RAs with the O-flag set and associated with different PvDs
          are received on the same interface, the link-local address of the DHCPv6 server MAY be
          compared with the routers' link-local addresses in order to
          disambiguate. If the disambiguation is impossible, then the DHCPv6
          configuration information MUST be associated with an implicit
          PvD.</t>

          <t>This process requires hosts to keep track of received RAs,
          associated PvD IDs, and routers link-local addresses.</t>

        </section>

        <section anchor="dhcpv4" title="DHCPv4 configuration association">
          <t>When a host retrieves configuration from DHCPv4 on an interface,
          the configured elements MUST be associated with the explicit PvD,
          received on the same interface, whose PVD ID Options L-flag is set.
          If multiple different PvDs are found, the datalink layer address
          used by the DHCPv4 server/relay MAY be compared with the datalink
          layer address used by on-link advertising routers in order to
          disambiguate. If no RA associated with a PvD ID option with the
          L-flag set is found, or if the disambiguation fails, the IPv4
          configuration information MUST be associated with an implicit
          PvD.</t>
        </section>

        <section title="Interconnection Sharing by the Host">
          <t>The situation when a host becomes also a router by acting as a
          router or ND proxy on a different interface (such as WiFi) to share
          the connectivity of another interface (such as cellular), also known
          as "tethering" is TBD but it is expected that the one or several PvD
          associated to the shared interface will be also advertised to the
          clients.</t>
        </section>
      </section>
    </section>

    <section anchor="ike"
             title="Provisioning Domain Identification using IKEv2">
      <t>RFC 7296 defines Internet Key Exchange version 2 (IKEv2) which
      includes in sections 2.19 and 3.15 a Configuration Payload (CP) which
      may be used by an IPsec client to request configuration items
      (e.g., addresses, recursive DNS servers). IKEv2 also negatiates traffic
      selectors which represent the 5-tuple(s) to be protected by the Security
      Association (SA) negotiated by IKEv2. This set of information is another
      PvD and may include INTERNAL_IP6_ADDRESS, INTERNAL_IP6_LINK,
      INTERNAL_IP6_SUBNET (to be used to route traffic to this subent),
      INTERNAL_IP6_DNS, INTERNAL_DNS_DOMAIN.</t>

      <t>The PvD ID Configuration option for IKEv2 has the following structure
      (similar to the RA option):<figure
          title="PvD ID IKEv2 Configuration Payload Attributes format">
          <preamble/>

          <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|R|  Attribute Type             |              Length           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Seq  |H|L|     Reserved                                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            Lifetime                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          PvD ID FQDN                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>

          <postamble/>
        </figure></t>

      <t><list style="hanging">
          <t hangText="R-bit">Reserved (1 bit) - Defined in IKEv2 RFC
          [RFC7296].</t>

          <t hangText="Attribute Type">(15 bits) tbd by IANA PVD_ID.</t>

          <t hangText="Length">Length (2 octets, unsigned integer) - Length of
          PvD ID FQDN + 2.</t>

          <t hangText="Seq">Sequence number (4 bits) for the PvD Additional
          Information, as described in <xref target="data"/>.</t>

          <t hangText="H-flag">(1 bit) Whether some PvD Additional Information
          is made available through HTTP over TLS, as described in <xref
          target="data"/>.</t>

          <t hangText="L-flag">(1 bit) must be set to 0 if the Configuration
          Payload contains only IPv6 information, else it must be set to
          1.</t>

          <t hangText="Reserved">(10 bits) Reserved for later use. It MUST be
          set to zero by the sender and ignored by the receiver.</t>

          <t hangText="PvD ID FQDN">The FQDN used as PvD ID in DNS binary
          format <xref target="RFC1035"/>, padded until the next 8 octets
          boundary. All the bytes after the first empty DNS label MUST be set
          to zero by the sender and MUST be ignored by the receiver. The DNS
          name compression technique described in <xref target="RFC1035"/>
          MUST NOT be used.</t>
        </list></t>
    </section>

    <section anchor="data" title="Provisioning Domain Additional Information">
      <t>Once a new PvD ID is discovered, it may be used to retrieve
      additional information about the characteristics of the provided
      connectivity. This set of information is called PvD Additional
      Information, and is encoded as a JSON object <xref
      target="RFC7159"/>.</t>

      <t>The purpose of this additional set of information is to securely
      provide additional information to hosts about the connectivity that is
      provided using a given interface and source address pair. It typically
      includes data that would be considered too large, or not critical
      enough, to be provided with an RA option. The information contained
      in this object MAY be used by the operating system, network libraries,
      applications, or users, in order to decide which set of PvDs should be
      used for which connection, as described in <xref target="host"/>.</t>

      <section title="Retrieving the PvD Additional Information">
        <t>When the H-flag of the PvD ID Option is set, hosts MAY attempt to
        retrieve the PvD Additional Information associated with a given PvD by
        performing an HTTP over TLS <xref target="RFC2818"/> GET query to
        https://&lt;PvD-ID&gt;/pvd.json <xref target="RFC5785"/>. On the other
        hand, hosts MUST NOT do so whenever the H-flag is not set.</t>

        <t>Note: Should the PvD AI retrieval be a MAY or a
        SHOULD ? Could the object contain critical data, or should it only
        contain informational data ?</t>

        <t>Note that the DNS name resolution of &lt;PvD-ID&gt; as well as the
        actual query MUST be performed in the PvD context associated to the
        PvD ID. In other words, the name resolution, source address selection,
        as well as the next-hop router selection MUST be performed while using
        exclusively the set of configuration information attached with the
        PvD, as defined in <xref target="host"/>.</t>

        <t>If the HTTP status of the answer is greater than or equal to 400
        the host MUST abandon and consider that there is no additional PvD
        information. If the HTTP status of the answer is between 300 included
        and 399 included it MUST follow the redirection(s). If the HTTP status
        of the answer is between 200 included and 299 included the host MAY
        get a file containing a single JSON object. When a JSON object could
        not be retrieved, an error message SHOULD be logged and/or displayed
        in a rate-limited fashion.</t>

        <t>After retrieval of the PvD Additional Information, hosts MUST watch
        the PvD ID Seq field for change. In case a different value than the
        one in the RA Seq field is observed, or whenever the validity time
        included in the object is expired, hosts MUST either perform a new
        query and retrieve a new version of the object, or deprecate the
        object and stop using it.</t>

        <t>Hosts retrieving a new PvD Additional Information object MUST check
        for the presence and validity of the mandatory fields <xref
        target="aiformat"/>. A retrieved object including an outdated expiration
        time or missing a mandatory element, MUST be ignored. In
        order to avoid traffic spikes toward the server hosting the PvD
        Additional Information when an object expires, a host which last
        retrieved an object at a time A, including a validity time B, SHOULD
        renew the object at a uniformly random time in the interval
        [(B-A)/2,A].</t>

        <t>In order to prevent PvD spoofing by malicious or misconfigured
        routers, PvD Additional Information object includes a set of IPv6
        prefixes which MUST be checked against all the Prefix Information
        Options advertised in the Router Advertisement. If any of the prefixes
        included in the Prefix Information Options is not in the set of prefixes
        contained in the additional information, the PvD (the one included in
        the RA and in the additional information) MUST be considered unsafe
        and MUST NOT be used. While this does not prevent a malicious network
        provider, it can be used to detect misconfiguration.</t>

        <t>The server serving the JSON files SHOULD also check whether the
        client address is part of the prefixes listed into the additional
        information and SHOULD return a 403 response code if there is no
        match. The server MAY also use the client address to select the right
        JSON object to be returned.</t>

        <t>Note: In a similar way, a DNS server names list could be
        included in the PvD AI in order to avoid rogue APs from inserting a
        different DNS resolver. But this would also prevent CPEs from
        advertising themselves as default DNS (which is usually done). SPs
        which really want to use CPEs as DNS, for caching reasons, might find
        'creative' ways to go around this rule.</t>
      </section>

      <section title="Providing the PvD Additional Information">
        <t>Whenever the H-flag is set in the PvD RA Option, a valid PvD
        Additional Information object MUST be made available to all hosts
        receiving the RA. In particular, when a captive portal is present,
        hosts MUST still be allowed to access the object, even before logging
        into the captive portal.</t>

        <t>Routers MAY increment the PVD ID Sequence number (Seq) in order to
        inform host that a new PvD Additional Information object is available
        and should be retrieved.</t>
      </section>

      <section anchor="aiformat" title="PvD Additional Information Format">
        <t>The PvD Additional Information is a JSON object.</t>

        <t>The following array presents the mandatory keys which MUST be
        included in the object:</t>

        <texttable>
          <ttcol>JSON key</ttcol>

          <ttcol>Description</ttcol>

          <ttcol>Type</ttcol>

          <ttcol width="20%">Example</ttcol>

          <c>name</c>

          <c>Human-readable service name</c>

          <c>UTF-8 string</c>

          <c>"Awesome Wifi"</c>

          <c>expires</c>

          <c>Date after which this object is not valid</c>

          <c>ISO 8601</c>

          <c>"2017-07-23T06:00:00Z"</c>

          <c>prefixes</c>

          <c>Array of IPv6 prefixes valid for this PVD</c>

          <c>Array of strings</c>

          <c>["2001:db8:1::/48", "2001:db8:4::/48"]</c>
        </texttable>

        <t>A retrieved object which does not include a valid string associated
        with the "name" key at the root of the object, or a valid date
        associated with the "expiration" key, also at the root of the object,
        MUST be ignored. In such cases, an error message SHOULD be logged
        and/or displayed in a rate-limited fashion.</t>

        <t>The following table presents some optional keys which MAY be
        included in the object.</t>

        <texttable>
          <ttcol>JSON key</ttcol>

          <ttcol>Description</ttcol>

          <ttcol>Type</ttcol>

          <ttcol width="20%">Example</ttcol>

          <c>localizedName</c>

          <c>Localized user-visible service name, language can be selected
          based on the HTTP Accept-Language header in the request.</c>

          <c>UTF-8 string</c>

          <c>"Wifi G&eacute;nial"</c>

          <c>noInternet</c>

          <c>No Internet, set when the PvD only provides restricted access to
          a set of services.</c>

          <c>boolean</c>

          <c>true</c>

          <c>characteristics</c>

          <c>Connectivity characteristics</c>

          <c>JSON object</c>

          <c>See <xref target="c"/></c>

          <c>metered</c>

          <c>metered, when the access volume is limited.</c>

          <c>boolean</c>

          <c>false</c>
        </texttable>

        <t>It is worth noting that the JSON format allows for extensions.
        Whenever an unknown key is encountered, it MUST be ignored along with
        its associated elements, unless specified otherwise in future updating
        documents.</t>

        <section anchor="c" title="Connectivity Characteristics Information">
          <t>The following set of keys can be used to signal certain
          characteristics of the connection towards the PvD.</t>

          <t>They should reflect characteristics of the overall access
          technology which is not limited to the link the host is connected
          to, but rather a combination of the link technology, CPE upstream
          connectivity, and further quality of service considerations.</t>

          <texttable>
            <ttcol>JSON key</ttcol>

            <ttcol>Description</ttcol>

            <ttcol>Type</ttcol>

            <ttcol width="20%">Example</ttcol>

            <c>maxThroughput</c>

            <c>Maximum achievable throughput</c>

            <c>object({down(int), up(int)}) in kb/s</c>

            <c>{"down": 10000, "up": 5000}</c>

            <c>minLatency</c>

            <c>Minimum achievable latency</c>

            <c>object({down(int), up(int)}) in ms</c>

            <c>{"down": 10, "up": 20}</c>

            <c>rl</c>

            <c>Maximum achievable reliability</c>

            <c>object({down(int), up(int)}) in losses every 1000 packets</c>

            <c>{"down": 0.1, "up": 1}</c>
          </texttable>
        </section>

        <section anchor="keys-private" title="Private Extensions">
          <t>JSON keys starting with "x-" are reserved for private use and can
          be utilized to provide information that is specific to vendor, user
          or enterprise. It is RECOMMENDED to use one of the patterns
          "x-FQDN-KEY" or "x-PEN-KEY" where FQDN is a fully qualified domain
          name or PEN is a <xref target="PEN">private enterprise number</xref>
          under control of the author of the extension to avoid
          collisions.</t>
        </section>

        <section anchor="ex" title="Example">
          <t>Here are two examples based on the keys defined in this
          section.</t>

          <figure>
            <artwork><![CDATA[
{
  "name": "Foo Wireless",
  "localizedName": "Foo-France Wifi",
  "expires": "2017-07-23T06:00:00Z",
  "prefixes" : ["2001:db8:1::/48", "2001:db8:4::/48"],
  "characteristics": {
   "maxThroughput": { "down":200000, "up": 50000 },
   "minLatency": { "down": 0.1, "up": 1 }
  }
}
]]></artwork>
          </figure>

          <figure>
            <artwork><![CDATA[
{
  "name": "Bar 4G",
  "localizedName": "Bar US 4G",
  "expires": "2017-07-23T06:00:00Z",
  "prefixes": ["2001:db8:1::/48", "2001:db8:4::/48"],
  "metered": true,
  "characteristics": {
    "maxThroughput": { "down":80000, "up": 20000 }
  }
}
]]></artwork>
          </figure>
        </section>
      </section>
    </section>

    <section title="Security Considerations">
      <t>Although some solutions such as IPSec or SEND <xref
      target="RFC3971"/> can be used in order to secure the IPv6 Neighbor
      Discovery Protocol, actual deployments largely rely on link layer or
      physical layer security mechanisms (e.g. 802.1x <xref
      target="IEEE8021X"/>).</t>

      <t>This specification does not improve the Neighbor Discovery Protocol
      security model, but extends the purely link-local configuration
      retrieval mechanisms with HTTP-over-TLS communications.</t>

      <t>During the exchange, the server authenticity is verified by the mean
      of a certificate, validated based on the FQDN found in the Router
      Advertisement (e.g. using a list of pre-installed CA certificates, or
      DNSSec <xref target="RFC4035"/> with DNS Based Authentication of Named
      Entities <xref target="RFC6698"/>). This authentication creates a secure
      binding between the information provided by the trusted Router
      Advertisement, and the HTTP server.</t>

      <t>The IPv6 prefixes list included in the PvD Additional Information
      JSON object is used to validate that the prefixes included in the Router
      Advertisements are really part of the PvD.</t>

      <t>Note: The previous point does not protect against attacker
      performing NAT66. It would if we mandate the source-address validation
      on the server side, but not protect against tunnels. In other words,
      address based security will not protect against rogue APs, but may
      prevent the use of NAT66.</t>

      <t>For privacy reasons, it is desirable that the PvD Additional
      Information object may only be retrieved by the hosts using the given
      PvD. Host identity SHOULD be validated based on the client address that is
      used during the HTTP query.</t>
    </section>

    <section title="IANA Considerations">
      <t>IANA is kindly requested to allocate a new IPv6 Neighbor Discovery
      option number for the PvD ID Router Advertisement option and a new IKEv2
      Configuration Payload Attribute Types for PVD_ID.</t>

      <t>TBD: JSON keys will need a new register.</t>
    </section>

    <section title="Acknowledgements">
      <t>Many thanks to M. Stenberg and S. Barth for their earlier work: <xref
      target="I-D.stenberg-mif-mpvd-dns"/>.</t>

      <t>Thanks also to Ray Bellis, Lorenzo Colitti, Thierry Danis, Marcus
      Keane, Erik Kline, Jen Lenkova, Mark Townsley and James Woodyatt for
      useful and interesting discussions.</t>

      <t>Finally, many thanks to Thierry Danis for his implementation work: <xref
    target="github"/>.</t>
    </section>
  </middle>

  <back>
    <references title="Normative references">
      <?rfc include="reference.RFC.1035.xml"?>

      <?rfc include="reference.RFC.2119.xml"?>

      <?rfc include="reference.RFC.2461.xml"?>

      <?rfc include="reference.RFC.2818.xml"?>

      <?rfc include="reference.RFC.4861.xml"?>

      <?rfc include="reference.RFC.5785.xml"?>

      <?rfc include="reference.RFC.7159.xml"?>
    </references>

    <references title="Informative references">
      <?rfc include="reference.RFC.3971.xml"?>

      <?rfc include="reference.RFC.4035.xml"?>

      <?rfc include="reference.RFC.4191.xml"?>

      <?rfc include="reference.RFC.5798.xml"?>

      <?rfc include="reference.RFC.6106.xml"?>

      <?rfc include="reference.RFC.6698.xml"?>

      <?rfc include="reference.RFC.6724.xml"?>

      <?rfc include="reference.RFC.7556.xml"?>

      <?rfc include="reference.RFC.7710.xml"?>

      <?rfc include="reference.RFC.8028.xml"?>

      <?rfc include="reference.I-D.bowbakova-rtgwg-enterprise-pa-multihoming.xml"?>

      <?rfc include="reference.I-D.stenberg-mif-mpvd-dns"?>

      <?rfc include="reference.I-D.kline-mif-mpvd-api-reqs"?>

      <reference anchor="PEN"
                 target="https://www.iana.org/assignments/enterprise-numbers">
        <front>
          <title>Private Enterprise Numbers</title>

          <author>
            <organization>IANA</organization>
          </author>

          <date/>
        </front>
      </reference>

      <reference anchor="IEEE8021X">
        <front>
          <title>IEEE Standards for Local and Metropolitan Area Networks: Port
          based Network Access Control, IEEE Std</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date/>
        </front>
      </reference>

<reference anchor="github" target="https://github.com/IPv6-mPvD">
    <front>
        <title>IPv6-mPvD github repository</title>
        <author>
            <organization>Cisco</organization>
        </author>
        <date/>
    </front>
</reference>

    </references>

    <section title="Changelog">
      <t>Note to RFC Editors: Remove this section before publication.</t>

      <section title="Version 00">
        <t>Initial version of the draft. Edited by Basile Bruneau + Eric
        Vyncke and based on Basile's work.</t>
      </section>

      <section title="Version 01">
        <t>Major rewrite intended to focus on the the retained solution based
        on corridors, online, and WG discussions. Edited by Pierre Pfister.
        The following list only includes major changes. <list>
            <t>PvD ID is an FQDN retrieved using a single RA option. This
            option contains a sequence number for push-based updates, a new
            H-flag, and a L-flag in order to link the PvD with the IPv4 DHCP
            server.</t>

            <t>A lifetime is included in the PvD ID option.</t>

            <t>Detailed Hosts and Routers specifications.</t>

            <t>Additional Information is retrieved using HTTP-over-TLS when
            the PvD ID Option H-flag is set. Retrieving the object is
            optional.</t>

            <t>The PvD Additional Information object includes a validity
            date.</t>

            <t>DNS-based approach is removed as well as the DNS-based encoding
            of the PvD Additional Information.</t>

            <t>Major cut in the list of proposed JSON keys. This document may
            be extended later if need be.</t>

            <t>Monetary discussion is moved to the appendix.</t>

            <t>Clarification about the 'prefixes' contained in the additional
            information.</t>

            <t>Clarification about the processing of DHCPv6.</t>
          </list></t>
      </section>
    </section>

    <section anchor="keys-cost" title="Connection monetary cost">
      <t>NOTE: This section is included as a request for comment on the
      potential use and syntax.</t>

      <t>The billing of a connection can be done in a lot of different ways.
      The user can have a global traffic threshold per month, after which his
      throughput is limited, or after which he/she pays each megabyte. He/she
      can also have an unlimited access to some websites, or an unlimited
      access during the weekends.</t>

      <t>An option is to split the bill in elementary billings, which have
      conditions (a start date, an end date, a destination IP address...). The
      global billing is an ordered list of elementary billings. To know the
      cost of a transmission, the host goes through the list, and the first
      elementary billing whose the conditions are fulfilled gives the cost. If
      no elementary billing conditions match the request, the host MUST make
      no assumption about the cost.</t>

      <section anchor="billing-conditions" title="Conditions">
        <t>Here are the potential conditions for an elementary billing. All
        conditions MUST be fulfill.</t>

        <texttable>
          <ttcol>Key</ttcol>

          <ttcol>Description</ttcol>

          <ttcol>Type</ttcol>

          <ttcol width="20%">JSON Example</ttcol>

          <c>beginDate</c>

          <c>Date before which the billing is not valid</c>

          <c>ISO 8601</c>

          <c>"1977-04-22T06:00:00Z"</c>

          <c>endDate</c>

          <c>Date after which the billing is not valid</c>

          <c>ISO 8601</c>

          <c>"1977-04-22T06:00:00Z"</c>

          <c>domains</c>

          <c>FQDNs whose the billing is limited</c>

          <c>array(string)</c>

          <c>["deezer.com","spotify.com"]</c>

          <c>prefixes4</c>

          <c>IPv4 prefixes whose the billing is limited</c>

          <c>array(string)</c>

          <c>["78.40.123.182/32","78.40.123.183/32"]</c>

          <c>prefixes6</c>

          <c>IPv6 prefixes whose the billing is limited</c>

          <c>array(string)</c>

          <c>["2a00:1450:4007:80e::200e/64"]</c>
        </texttable>
      </section>

      <section anchor="billing-price" title="Price">
        <t>Here are the different possibilities for the cost of an elementary
        billing. A missing key means "all/unlimited/unrestricted". If the
        elementary billing selected has a trafficRemaining of 0 kb, then it
        means that the user has no access to the network. Actually, if the
        last elementary billing has a trafficRemaining parameter, it means
        that when the user will reach the threshold, he/she will not have
        access to the network anymore.</t>

        <texttable>
          <ttcol>Key</ttcol>

          <ttcol>Description</ttcol>

          <ttcol>Type</ttcol>

          <ttcol width="20%">JSON Example</ttcol>

          <c>pricePerGb</c>

          <c>The price per Gigabit</c>

          <c>float (currency per Gb)</c>

          <c>2</c>

          <c>currency</c>

          <c>The currency used</c>

          <c>ISO 4217</c>

          <c>"EUR"</c>

          <c>throughputMax</c>

          <c>The maximum achievable throughput</c>

          <c>float (kb/s)</c>

          <c>100000</c>

          <c>trafficRemaining</c>

          <c>The traffic remaining</c>

          <c>float (kB)</c>

          <c>12000000</c>
        </texttable>
      </section>

      <section anchor="billing-examples" title="Examples">
        <t>Example for a user with 20 GB per month for 40 EUR, then reach a
        threshold, and with unlimited data during weekends and to
        example.com:</t>

        <figure>
          <artwork><![CDATA[
[
  {
    "domains": ["example.com"]
  },
  {
    "prefixes4": ["78.40.123.182/32","78.40.123.183/32"]
  },
  {
    "beginDate": "2016-07-16T00:00:00Z",
    "endDate": "2016-07-17T23:59:59Z",
  },
  {
    "beginDate": "2016-06-20T00:00:00Z",
    "endDate": "2016-07-19T23:59:59Z",
    "trafficRemaining": 12000000
  },
  {
    "throughputMax": 100000
  }
]
            ]]></artwork>
        </figure>

        <t>If the host tries to download data from example.com, the conditions
        of the first elementary billing are fulfilled, so the host takes this
        elementary billing, finds no cost indication in it and so deduces that
        it is totally free. If the host tries to exchange data with foobar.com
        and the date is 2016-07-14T19:00:00Z, the conditions of the first,
        second and third elementary billing are not fulfilled. But the
        conditions of the fourth are. So the host takes this elementary
        billing and sees that there is a threshold, 12 GB are remaining.</t>

        <t>Another example for a user abroad, who has 3 GB per year abroad,
        and then pay each MB:</t>

        <figure>
          <artwork><![CDATA[
[
  {
    "beginDate": "2016-02-10T00:00:00Z",
    "endDate": "2017-02-09T23:59:59Z",
    "trafficRemaining": 3000000
  },
  {
    "pricePerGb": 30,
    "currency": "EUR"
  }
]
            ]]></artwork>
        </figure>
      </section>
    </section>
  </back>
</rfc>
